name: CI
on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:

jobs:
  check_wrapper:
    name: Validate Gradle Wrapper
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@v2

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1

  build:
    name: Build app
    needs: check_wrapper
    runs-on: ubuntu-latest

    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ github.token }}

      - name: Clone repo
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Copy CI gradle.properties
        run: |
          mkdir -p ~/.gradle
          cp .github/runner-files/ci-gradle.properties ~/.gradle/gradle.properties
      - name: Build app
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: assembleRelease
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true
          configuration-cache-enabled: true

      # Sign APK and create release for tags

      - name: Get tag name
        if: startsWith(github.ref, 'refs/tags/')
        id: get_tag_name
        run: |
          set -x
          echo "VERSION_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Sign APK
        if: startsWith(github.ref, 'refs/tags/')
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEY_B64 }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.PASSWORD }}
          keyPassword: ${{ secrets.PASSWORD }}

      - name: Clean up build artifacts
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cp ${{ env.SIGNED_RELEASE_FILE }} system-info-dumper-${{ env.VERSION_TAG }}.apk

      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION_TAG }}
          name: Release ${{ env.VERSION_TAG }}
          files: |
            system-info-dumper-${{ env.VERSION_TAG }}.apk
          draft: true
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
